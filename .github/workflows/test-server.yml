name: Test JSON Server

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-server:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Test JSON Server
      run: |
        echo "🧪 Testando servidor JSON..."
        
        # Iniciar servidor
        echo "🚀 Iniciando servidor..."
        npm run server:start
        
        # Aguardar inicialização
        echo "⏳ Aguardando inicialização..."
        sleep 8
        
        # Verificar se está rodando
        echo "🔍 Verificando status..."
        npm run server:check
        
        # Testar endpoint com retry
        echo "📊 Testando endpoint /episodes..."
        for i in {1..10}; do
          EPISODES=$(curl -s http://localhost:3333/episodes)
          if [ -n "$EPISODES" ]; then
            echo "✅ Endpoint /episodes respondeu na tentativa $i"
            break
          fi
          
          if [ $i -eq 10 ]; then
            echo "❌ Endpoint /episodes não respondeu após 10 tentativas"
            echo "📋 Logs do servidor:"
            cat json-server.log || echo "Nenhum log encontrado"
            exit 1
          fi
          
          echo "Tentativa $i falhou, aguardando..."
          sleep 2
        done
        
        echo "📄 Primeiros 200 caracteres da resposta:"
        echo "$EPISODES" | head -c 200
        echo ""
        
        # Testar endpoint específico
        echo "🎯 Testando endpoint específico..."
        FIRST_EPISODE=$(curl -s http://localhost:3333/episodes/a-importancia-da-contribuicao-em-open-source)
        if [ -n "$FIRST_EPISODE" ]; then
          echo "✅ Endpoint específico respondeu"
        else
          echo "❌ Endpoint específico não respondeu"
          exit 1
        fi
        
        # Verificar estrutura dos dados
        echo "🔍 Verificando estrutura dos dados..."
        EPISODES_COUNT=$(echo "$EPISODES" | jq 'length' 2>/dev/null || echo "0")
        if [ "$EPISODES_COUNT" -gt 0 ]; then
          echo "✅ Dados válidos encontrados: $EPISODES_COUNT episódios"
        else
          echo "❌ Dados inválidos ou vazios"
          exit 1
        fi
        
        # Parar servidor
        echo "🛑 Parando servidor..."
        npm run server:stop
        
        echo "🎉 Todos os testes passaram!"
    
    - name: Cleanup
      run: npm run server:stop
      if: always()
